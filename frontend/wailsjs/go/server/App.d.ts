// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {model} from '../models';
import {config} from '../models';
import {server} from '../models';
import {store} from '../models';
import {process} from '../models';

export function AcknowledgeAlert(arg1:number,arg2:string):Promise<void>;

export function CheckPermission():Promise<void>;

export function ClearAllAlerts():Promise<void>;

export function ClearAllData():Promise<void>;

export function ClearProcessStats():Promise<void>;

export function CreateAlertRule(arg1:model.AlertRule):Promise<model.AlertRule>;

export function DeleteAlertLog(arg1:number):Promise<void>;

export function DeleteAlertRule(arg1:number):Promise<void>;

export function ExportPCAP(arg1:number,arg2:number):Promise<Array<number>>;

export function GetAlertRule(arg1:number):Promise<model.AlertRule>;

export function GetAlertStats():Promise<Record<string, any>>;

export function GetConfig():Promise<config.Config>;

export function GetCurrentInterface():Promise<string>;

export function GetDashboardStats():Promise<model.DashboardStats>;

export function GetInterfaces():Promise<Array<model.NetworkInterface>>;

export function GetLibraryVersion():Promise<string>;

export function GetLimits():Promise<config.Limits>;

export function GetMetrics():Promise<model.Metrics>;

export function GetNpcapDownloadURL():Promise<string>;

export function GetProcessStats(arg1:number,arg2:number):Promise<server.ProcessStatsResult>;

export function GetProtocolDistribution():Promise<Record<string, number>>;

export function GetRawPackets(arg1:number):Promise<Array<model.Packet>>;

export function GetSessions(arg1:string,arg2:number):Promise<Array<model.Session>>;

export function GetSnapshot(arg1:string,arg2:number):Promise<Array<any>>;

export function GetStorageStats():Promise<store.StoreStats>;

export function GetTopProcessesByTraffic(arg1:number):Promise<Array<process.ProcessStats>>;

export function IsCapturing():Promise<boolean>;

export function IsPaused():Promise<boolean>;

export function PauseCapture():Promise<void>;

export function QueryAlertLogs(arg1:model.AlertLogQuery):Promise<Record<string, any>>;

export function QueryAlertRules(arg1:model.AlertRuleQuery):Promise<Record<string, any>>;

export function QuerySessionFlows(arg1:model.SessionFlowQuery):Promise<model.SessionFlowResult>;

export function QuerySessions(arg1:model.QueryOptions):Promise<model.QueryResult>;

export function ResumeCapture():Promise<void>;

export function StartCapture(arg1:string):Promise<void>;

export function StopCapture():Promise<void>;

export function UpdateAlertRule(arg1:model.AlertRule):Promise<void>;

export function UpdateConfig(arg1:config.Config):Promise<void>;

export function UpdateLimits(arg1:config.Limits):Promise<void>;

export function VacuumStorage():Promise<void>;
